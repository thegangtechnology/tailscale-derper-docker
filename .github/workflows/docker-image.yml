name: Docker Image

on:
  push:
    branches: [main]
  schedule:
    - cron: '0 0 * * MON'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  packages: write

env:
  IMAGE_NAME: "tailscale-derper"

jobs:
  get-tailscale-latest-version:
    # runs-on:
    #   group: ubuntu-x64-docker-dind
    #   labels: self-hosted
    outputs:
      tailscale_version: ${{ steps.get_version.outputs.tailscale_version }}
      image_exists: ${{ steps.check_image.outputs.image_exists }}
    steps:
      - name: Get latest tailscale version
        id: get_version
        run: |
          TAILSCALE_VERSION=$(curl -s https://api.github.com/repos/tailscale/tailscale/releases/latest | jq -r '.tag_name')
          echo "Latest tailscale version: $TAILSCALE_VERSION"
          echo "tailscale_version=$TAILSCALE_VERSION" >> $GITHUB_OUTPUT

      - name: Check if the image exists
        id: check_image
        run: |
          HTTP_CODE=$(curl -s -o /dev/null -w "%{http_code}" \
            -H "Authorization: Bearer $(echo ${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}| base64)" \
            -H "Accept: application/vnd.oci.image.index.v1+json, application/vnd.oci.image.manifest.v1+json, application/vnd.docker.distribution.manifest.v2+json" \
            "https://ghcr.io/v2/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}/manifests/${{ steps.get_version.outputs.tailscale_version }}")
          
          IMAGE_EXISTS=$([[ $HTTP_CODE -eq 200 ]] && echo "true" || echo "false")
          echo "HTTP code: $HTTP_CODE, Image exists: $IMAGE_EXISTS"
          echo "image_exists=$IMAGE_EXISTS" >> $GITHUB_OUTPUT

  build:
    # Below steps need more tuning, See: Correct way to build multi platform images - https://docs.docker.com/build/ci/github-actions/multi-platform/
    needs: get-tailscale-latest-version
    if: ${{ needs.get-latest-version.outputs.image_exists == 'false' || github.event_name != 'schedule' }}
    strategy:
      matrix:
        platform: [linux/amd64, linux/arm64]
    # runs-on:
    #   group: ubuntu-x64-docker-dind
    #   labels: self-hosted
    steps:
      - uses: actions/checkout@v2

      - name: Log in to GitHub Docker Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          logout: true

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push (${{ matrix.platform }})
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: ${{ matrix.platform }}
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ needs.get-latest-version.outputs.tailscale_version }}
            ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:latest
          build-args: |
            DERP_VERSION=${{ needs.get-latest-version.outputs.tailscale_version }}
